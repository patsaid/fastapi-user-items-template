name: CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

    env:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      DEV_DATABASE_URL: "postgresql+psycopg2://postgres:postgres@127.0.0.1:5433/db"
      TEST_DATABASE_URL: "postgresql+psycopg2://postgres:postgres@127.0.0.1:5434/db"
      PROD_DATABASE_URL: "postgresql+psycopg2://postgres:postgres@127.0.0.1:5435/db"
      FRONTEND_URL: "http://localhost:8000"
      JWT_SECRET_KEY: "e4c6d72765c5c13bc070f93f26a6bd7447511715bbd3efbe1542b95f1c9d767f"
      JWT_ALGORITHM: "HS256"
      JWT_ACCESS_TOKEN_EXPIRE_MINUTES: 30
      JWT_REFRESH_TOKEN_EXPIRE_MINUTES: 10080

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install pdm
        pdm install

    - name: Set up Docker Compose
      run: |
        docker-compose -f docker-compose.yml up -d
        docker ps -a

    - name: Wait for DB
      run: |
        while ! nc -z localhost 5433; do   
          sleep 1
        done

    - name: Run lint
      run: |
        pdm run pylint app

    - name: Run tests
      run: |
        pdm run pytest

    - name: Tear down Docker Compose
      if: always()
      run: |
        docker-compose -f docker-compose.yml down
