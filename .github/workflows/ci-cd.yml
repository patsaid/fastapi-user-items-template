name: CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      DEV_DATABASE_URL: ${{ secrets.DEV_DATABASE_URL }}
      TEST_DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
      PROD_DATABASE_URL: ${{ secrets.PROD_DATABASE_URL }}
      FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      JWT_ALGORITHM: ${{ secrets.JWT_ALGORITHM }}
      JWT_ACCESS_TOKEN_EXPIRE_MINUTES: ${{ secrets.JWT_ACCESS_TOKEN_EXPIRE_MINUTES }}
      JWT_REFRESH_TOKEN_EXPIRE_MINUTES: ${{ secrets.JWT_REFRESH_TOKEN_EXPIRE_MINUTES }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install pdm
        pdm install

    - name: Create .env file
      run: |
        echo "DEV_DATABASE_URL=${{ secrets.DEV_DATABASE_URL }}" > .env
        echo "TEST_DATABASE_URL=${{ secrets.TEST_DATABASE_URL }}" >> .env
        echo "PROD_DATABASE_URL=${{ secrets.PROD_DATABASE_URL }}" >> .env

    - name: Set up Docker Compose
      run: |
        docker-compose -f docker-compose.yml up -d
        docker ps -a

    - name: Wait for DB
      run: |
        while ! nc -z localhost 5433; do   
          sleep 1
        done

    - name: Run lint
      run: |
        pdm run pylint app

    - name: Run tests
      run: |
        pdm run pytest

    - name: Tear down Docker Compose
      if: always()
      run: |
        docker-compose -f docker-compose.yml down
